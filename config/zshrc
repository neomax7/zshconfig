# Enable Powerlevel10k instant prompt. Should stay close to the top of ~/.zshrc.
if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
  source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
fi

# Path to your oh-my-zsh installation.
export ZSH="$HOME/.oh-my-zsh"
ZSH_THEME="powerlevel10k/powerlevel10k"
# Caution: this setting can cause issues with multiline prompts in zsh < 5.7.1 (see #5765)
# COMPLETION_WAITING_DOTS="true"

if [[ -d ~/.local/share/zsh/site-functions ]];
then
  fpath+=$HOME/.local/share/zsh/site-functions
fi

if [[ -f ~/.config/bws/bws ]];
then
  source ~/.config/bws/bws
fi

## check OS
case $(uname) in
Linux)
  OS=LINUX;
;;
Darwin)
  OS=MAC;
;;
esac

PLUGINS=(git dirhistory zsh-syntax-highlighting zsh-autosuggestions zsh-completions zsh-history-substring-search systemd firewalld)

if [[ -f ~/.nvm/nvm.sh ]];
then
  PLUGINS+=nvm
fi

if [[ -f "$(whence rustc)" ]];
then
  PLUGINS+=rust
fi

if [[ -f "$(whence deno)" ]] || [[ -f ~/.deno/bin/deno ]];
then
  PLUGINS+=deno
fi

if [[ -f "$(whence podman)" ]];
then
  PLUGINS+=podman
fi

if [[ -f "$(whence gpg-agent)" ]];
then
  PLUGINS+=gpg-agent
fi

if [[ -f "$(whence terraform)" ]];
then
  PLUGINS+=terraform
fi

case $OS in
LINUX)
  set -A plugins $PLUGINS
;;
MAC)
  PLUGINS+=gnu-utils
  PLUGINS+=macos
  PLUGINS+=xcode
  set -A plugins $PLUGINS
;;
esac

source $ZSH/oh-my-zsh.sh

#my alias
if [[ -x "$(whence batcat)" ]]
then
  alias bat=batcat
  alias cat="bat -pp"
fi
if [[ -x "$(whence bat)" ]]
then
  alias cat="bat -pp"
fi
if [[ -x "$(whence ugrep)" ]]
then
  alias grep=ugrep
fi
if [[ -x "$(whence lsd)" ]]
then
  alias ls="lsd"
  alias tree="lsd --tree"
fi
if [[ -x "$(whence nvim)" ]]
then
  alias vi=nvim
fi
alias l='ls -alFh'
alias ll='ls -lFh'

case $OS in
MAC)
  ### my mac keybind
  bindkey '\033[1;2D' backward-word
  bindkey '\033[1;2C' forward-word

  ## my_PATH
  if [[ -d "/opt/homebrew/opt/ruby/bin" ]]
  then
    export PATH=/opt/homebrew/opt/ruby/bin:$PATH
    export PATH=$(gem environment gemdir)/bin:$PATH
  fi

  # gnu curl
  if [[ -d "/opt/homebrew/opt/curl/bin" ]]
  then
    export PATH=/opt/homebrew/opt/curl/bin:$PATH
  fi

  # JAVA
  export ANDROID_STUDIO_HOME="/Applications/Android Studio.app/Contents/jbr/Contents/Home"
  export ANDROID_HOME=$HOME/Library/Android/sdk

  if [[ -d $ANDROID_HOME ]]
  then
    export PATH=$PATH:$ANDROID_HOME/emulator
    export PATH=$PATH:$ANDROID_HOME/platform-tools
  fi
  if [[ -d $ANDROID_STUDIO_HOME ]]
  then
    JAVA_HOME="/Applications/Android Studio.app/Contents/jbr/Contents/Home"
    export PATH=$JAVA_HOME/bin:$PATH
  fi

  ## my_env
  if [[ -x $(whence nvim) ]]
  then
    export EDITOR=nvim
  elif [[ -x $(whence nano) ]]
  then
    export EDITOR=nano
  else
    export EDITOR=vi
  fi
  if [[ -x $(whence most) ]]
  then
    export PAGER=most
  fi

  # apple hypervisor
  export CONTAINERS_MACHINE_PROVIDER=applehv
;;
LINUX)
  # Docker support for Podman
  if [[ -v XDG_RUNTIME_DIR ]]; then
    if [[ -S "$XDG_RUNTIME_DIR/podman/podman.sock" ]]; then
  	export DOCKER_HOST="unix://$XDG_RUNTIME_DIR/podman/podman.sock"
    fi
  fi
  if [[ -d "$HOME/android-studio" ]]
  then
    export ANDROID_STUDIO_HOME=~/android-studio
    export JAVA_HOME=~/android-studio/jbr
  fi
  if [[ -d "$HOME/Android/Sdk" ]]
  then
    export ANDROID_HOME=~/Android/Sdk
  fi
;;
esac

# my env
# yarn
if [[ -d ~/.yarn/bin ]];
then
  export PATH=~/.yarn/bin:$PATH;
fi
# local bin
if [[ -d ~/.local/bin ]];
then
  export PATH=~/.local/bin:$PATH;
fi
# golang
if [[ -d ~/go/bin ]];
then
  export PATH=~/go/bin:$PATH;
fi
# rust
if [[ -e ~/.cargo/env ]];
then
  source ~/.cargo/env;
fi
# deno
if [[ -f ~/.deno/bin/deno ]];
then
  export PATH=~/.deno/bin:$PATH;
fi

export PAGER=most
export EDITOR=nvim

# To customize prompt, run `p10k configure` or edit ~/.p10k.zsh.
[[ ! -f ~/.p10k.zsh ]] || source ~/.p10k.zsh
[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion
